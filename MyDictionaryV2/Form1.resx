<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABbW1tUXFxcsldXVyMAAAAAAAAAAAAAAAAAAAAAW1tb3VtbW/9bW1v/W1tb/1tbW/9bW1vWAAAAAAAA
        AAAAAAAAAAAAAFxcXCRcXFyyXFxcUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWlpaWFtbW/tbW1v/W1tb81tbW2IAAAAAAAAAAFlZWT9bW1v9W1tb/1tbW/9bW1v/W1tb/1tb
        W/tZWVk8AAAAAAAAAABbW1tlW1tb81tbW/9bW1v7W1tbVwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFpaWlhbW1v8W1tb/1tbW/9bW1v/W1tb/1tbW7ZbW1vQW1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9cXFzOW1tbuFtbW/9bW1v/W1tb/1tbW/9bW1v7W1tbVwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAXFxcwFtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1u+AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbW1s4W1tb+1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb+l1d
        XTcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcXFx6W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9cXFxyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFbW1vBW1tb/1tb
        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
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb7ltb
        WxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxcXLJbW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tbsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWlpaUltbW/tbW1v/W1tb/1tb
        W/9bW1v/W1tbuVtbW89bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW81bW1u7W1tb/1tb
        W/9bW1v/W1tb/1tbW/pcXFxQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbV1tb
        W/xbW1v/Wlpa+FtbW20AAAABAAAAAFxcXD1bW1v8W1tb/1tbW/9bW1v/W1tb/1tbW/pbW1s7AAAAAAAA
        AAFbW1twWlpa+FtbW/9bW1v7XFxcVgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAXFxcWVtbW75aWlowAAAAAAAAAAAAAAAAAAAAAFtbW9tbW1v/W1tb/1tbW/9bW1v/W1tb1AAA
        AAAAAAAAAAAAAAAAAABcXFwyW1tbv1paWlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFxcsltbW/9bW1v/W1tb/1tb
        W/9bW1upAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcXFyIW1tb/1tb
        W/9bW1v/W1tb/1paWnwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1d
        XTRbW1u3W1tbu1tbW7tcXFy1WVlZKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////D////g////4H//++B9//HgeP/gAAB/wAAAP+AAAH/wA
        AD/8AAA//AAAP/wH4D/gD/AHgA/wAYAP8AGAD/ABgA/wAcAP8AP8B+A//AAAP/wAAD/8AAA/+AAAH/AA
        AA/4AAAf/HgeP/74H3//+B////g////8P///////
</value>
  </data>
</root>